var sale_refund = {};

var SaleRefund = function() {

    var obj = {};
    var self = this;

    self.obj = obj;
    self.initialize = initialize;
    self.initialize_associations = initialize_associations;
    self.compute_amounts = compute_amounts;

    $(".sale_refund").blur(function () {
        initialize(this);
        compute_amounts();
    });

    $('.sale_refund_detail').live('blur', function() {
        var input = $(".sale_refund:first").get(0);
        if (typeof input !== 'undefined') {
            initialize(input);
        }
        product_line_items.initialize(this);
        product_line_items.compute_product_total($(this));
    });

    function initialize(input) {
        if (isEmpty(obj)) {
            var model_name = get_model_name(input);
            var p = get_invoice_attrs(model_name);
            var sale_id = $("#" + model_name + "_sale_id");
            var source_invoice_number = $("#" + model_name + "_source_invoice_number");

            obj.issue_date = $("#" + model_name + "_issue_date");
            obj.sale_id = sale_id;
            obj.source_invoice_number = source_invoice_number;
            obj.gross_value = p.gross_value;
            obj.discount = p.discount;
            obj.disc_pct = p.disc_pct;
            obj.freight = p.freight;
            obj.vat = p.vat;
            obj.total = p.total;

            if(obj.issue_date.val() == "") {
                obj.issue_date.val(current_date());
            }
        }
    }

    function initialize_associations() {
        var customer_input = $('.refund_customer:first').get(0);
        if (typeof customer_input !== 'undefined') {
            customer = new Customer();
            customer.initialize(customer_input);
        }
        product_line_items = new ProductLineItem();
        product_line_items.find_line_items();
    }

    function compute_amounts() {
        if (!isEmpty(obj) && !isEmpty(product_line_items)) {

            var disc_pct = (obj.disc_pct.asNumber() / 100) || 0;
            var discount = obj.discount.asNumber() || 0;
            var freight  = obj.freight.asNumber() || 0;

            var pd = product_line_items.compute_amounts();
            discount = pd.gross_value * disc_pct;
            var vat = pd.items_vat * ( 1 - disc_pct ) + (freight * 0.16);
            var grand_total = pd.gross_value - discount + freight + vat;

            obj.gross_value.val(pd.gross_value);
            obj.discount.val(discount);
            obj.vat.val(vat);
            obj.total.val(grand_total);
            format_fields();
        }
    }

    $('.sale_invoice_refund').live('railsAutocomplete.select', function(event, data){
        initialize(this);
        load_sale_attrs(data);
    });

    function load_sale_attrs(data) {
        if (typeof data !== 'undefined') {
            var d = data.item;

            obj.sale_id.val(d.id);
            obj.disc_pct.val(d.disc_pct);

            $.ajax({
                type : 'get',
                url : '/customers/customer_name/' + d.customer_id,
                dataType : 'json',
              success : function(data, event) {
                  data.item = data.customer;
                  customer.load_customer_attrs(event, data);
                },
                error : function() {
                    console.log("Failure fetching customer");
                }
            });
        }
    }

    function format_fields() {
        obj.gross_value.formatCurrency();
        obj.discount.formatCurrency();
        obj.vat.formatCurrency();
        obj.total.formatCurrency();
    }

    function obj() {
        return obj;
    }

    return self;
}
